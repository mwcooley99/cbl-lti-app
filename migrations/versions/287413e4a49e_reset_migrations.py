"""reset migrations

Revision ID: 287413e4a49e
Revises: 
Create Date: 2021-07-26 23:21:02.022216

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '287413e4a49e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alignments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('canvas_api_tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('enrollment_terms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=True),
    sa.Column('end_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('workflow_state', sa.String(), nullable=True),
    sa.Column('sis_term_id', sa.String(), nullable=True),
    sa.Column('sis_import_id', sa.Integer(), nullable=True),
    sa.Column('cut_off_date', sa.DateTime(), nullable=True),
    sa.Column('current_term', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('sync_term', sa.Boolean(), server_default='false', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grade_calculation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('grade_rank', sa.Integer(), nullable=False),
    sa.Column('grade', sa.String(), nullable=False),
    sa.Column('threshold', sa.Float(), nullable=False),
    sa.Column('min_score', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('grade_rank')
    )
    op.create_table('outcomes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('calculation_int', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('term_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('sis_user_id', sa.String(), nullable=True),
    sa.Column('login_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('enrollment_term_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['enrollment_term_id'], ['enrollment_terms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_user_link',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('course_id', 'user_id')
    )
    op.create_table('grades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('grade', sa.String(), nullable=True),
    sa.Column('outcomes', sa.JSON(), nullable=True),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.Column('threshold', sa.Numeric(asdecimal=False), nullable=True),
    sa.Column('min_score', sa.Numeric(asdecimal=False), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['record_id'], ['records.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_grades_course_id'), 'grades', ['course_id'], unique=False)
    op.create_table('outcome_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('outcome_id', sa.Integer(), nullable=True),
    sa.Column('alignment_id', sa.String(), nullable=True),
    sa.Column('submitted_or_assessed_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('enrollment_term', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['alignment_id'], ['alignments.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['outcome_id'], ['outcomes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_outcome_results_course_id'), 'outcome_results', ['course_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_outcome_results_course_id'), table_name='outcome_results')
    op.drop_table('outcome_results')
    op.drop_index(op.f('ix_grades_course_id'), table_name='grades')
    op.drop_table('grades')
    op.drop_table('course_user_link')
    op.drop_table('courses')
    op.drop_table('users')
    op.drop_table('records')
    op.drop_table('outcomes')
    op.drop_table('grade_calculation')
    op.drop_table('enrollment_terms')
    op.drop_table('canvas_api_tokens')
    op.drop_table('alignments')
    # ### end Alembic commands ###
